#!/usr/bin/env php
<?php

use Maestro\Extension\CoreExtension\CoreExtension;
use Maestro\Extension\Process\ProcessExtension;
use Maestro\Extension\Template\TemplateExtension;
use Phpactor\ConfigLoader\ConfigLoaderBuilder;
use Phpactor\ConfigLoader\Core\ConfigLoader;
use Phpactor\Container\PhpactorContainer;
use Phpactor\Extension\Completion\CompletionExtension;
use Phpactor\Extension\Console\ConsoleExtension;
use Maestro\MaestroExtension;
use Symfony\Component\Console\Application;
use Symfony\Component\Console\Input\ArgvInput;
use Symfony\Component\Console\Input\Input;
use Symfony\Component\Console\Input\InputOption;
use Webmozart\PathUtil\Path;

require __DIR__ . '/../vendor/autoload.php';

$configBuilder = ConfigLoaderBuilder::create()
    ->addCandidate(getcwd() . '/maestro.json', 'json')
    ->enableJsonDeserializer('json');

$arg = new ArgvInput();

$configFile = $arg->getParameterOption(['-c', '--config']);
if (false !== $configFile) {
    if (!file_exists($configFile)) {
        throw new RuntimeException(sprintf(
            'Config file "%s" not found', $configFile
        ));
    }
    $configBuilder->addCandidate(Path::makeAbsolute($configFile, getcwd()), 'json');
}

$container = PhpactorContainer::fromExtensions([
    ConsoleExtension::class,
    MaestroExtension::class,
    TemplateExtension::class,
    ProcessExtension::class,
], $configBuilder->loader()->load());

$application = new Application();
$application->getDefinition()->addOptions([
    new InputOption('config', 'c', InputOption::VALUE_REQUIRED, 'Path to configuration file'),
    new InputOption('progress', 'p', InputOption::VALUE_REQUIRED, 'Progress', 'silent')
]);

$application->setCommandLoader(
    $container->get(ConsoleExtension::SERVICE_COMMAND_LOADER)
);
$application->run(
    $container->get(ConsoleExtension::SERVICE_INPUT),
    $container->get(ConsoleExtension::SERVICE_OUTPUT)
);

